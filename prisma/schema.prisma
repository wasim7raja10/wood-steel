generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Category {
  id            String        @id @default(cuid())
  name          String
  slug          String        @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  image         String?
  subcategories SubCategory[]
}

model SubCategory {
  id         String    @id @default(cuid())
  name       String
  slug       String    @unique
  categoryId String
  createdAt  DateTime  @default(now())
  image      String?
  updatedAt  DateTime  @updatedAt
  category   Category  @relation(fields: [categoryId], references: [id])
  products   Product[]

  @@index([categoryId])
}

model Product {
  id            String      @id @default(cuid())
  name          String
  description   String?
  price         Float
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  subCategoryId String
  image         String?
  rating        Float?
  color         String?
  material      String?
  review        Review[]
  subCategory   SubCategory @relation(fields: [subCategoryId], references: [id])
  orderItem     OrderItem?
  dimension     Dimension?

  @@index([subCategoryId])
}

model Dimension {
  id        String  @id @default(cuid())
  length    Float
  width     Float
  height    Float
  productId String  @unique
  product   Product @relation(fields: [productId], references: [id])

  @@index([productId])
}

model Review {
  id        String   @id @default(cuid())
  name      String
  rating    Float
  comment   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  productId String   @unique
  userId    String   @unique
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@index([productId, userId])
}

model User {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  password    String
  image       String?
  phoneNumber String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  token       String?
  orders      Order[]
  reviews     Review[]
  role        Role     @default(BUYER)
}

enum Role {
  BUYER
  SELLER
  ADMIN
}

model Order {
  id          String      @id @default(cuid())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  isPaid      Boolean     @default(false)
  paidAt      DateTime?
  isDelivered Boolean     @default(false)
  deliveredAt DateTime?
  userId      String      @unique
  user        User        @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]

  @@index([userId])
}

model OrderItem {
  id        String   @id @default(cuid())
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  productId String   @unique
  orderId   String   @unique
  product   Product  @relation(fields: [productId], references: [id])
  order     Order    @relation(fields: [orderId], references: [id])

  @@index([orderId])
}
